// REFRESH REGISTERS FUNCTION ///////////////////////////////////////////////////////
var numRegClicks = 0;
function refreshRegs (){
	// grab all data as big string
	// cache data comes in as .... abcd ....
	// where ' ' acts as a delimiter and a,b,c,d are words from a cacheLine
	var regStr = view.grabDataFrom_Registers();

	// convert cache string into array
	var regArr = regStr.split(' ');
	
	// button click testing
	if (numRegClicks > 0){
		self#regsCell.text = "number of times refreshed: ".concat(numRegClicks.toString());
	}
	
	// add in each line to cache UI with a break character
	// first set text to the empty string since we are repopulating the whole thing
	for (var i = 0; i < regArr.length; i++){
		self#regsCell.$append(<br>{regArr[i]});
	}
	
	numRegClicks++;
}

var numDramClicks = 0;
function refreshDram(){
	// grab all DRAM lines from DRAM as string
	// cache data comes in as .... abcd ....
	// where ' ' acts as a delimiter and a,b,c,d are words from a cacheLine
	var dramStr = view.grabDataFrom_DRAM();

	// convert cache string into array
	var dramArr = dramStr.split(' ');

	// button click testing
	if (numDramClicks > 0){
		self#dramCell.text = "number of times refreshed: ".concat(numDramClicks.toString());
	}
	
	// add in each line to cache UI with a break character
	// first set text to the empty string since we are repopulating the whole thing
	for (var i = 0; i < dramArr.length; i++){
		self#dramCell.$append(<br>{dramArr[i]});
	}
	
	numDramClicks++;
}

var numCacheClicks = 0;
function refreshCache(){
	// grab all cachelines from cache as string
	// cache data comes in as .... abcd ....
	// where ' ' acts as a delimiter and a,b,c,d are words from a cacheLine
	var cacheStr = view.grabDataFrom_Cache();

	// convert cache string into array
	var cacheArr = cacheStr.split(' ');
	
	// button click testing
	if (numCacheClicks > 0){
		self#cacheCell.text = "number of times refreshed: ".concat(numCacheClicks.toString());
	}

	// add in each line to cache UI with a break character
	for (var i = 0; i < cacheArr.length; i++){
		self#cacheCell.$append(<br>{cacheArr[i]});
	}
	
	numCacheClicks++;
}

// ALWAYS REFRESH ALL DATA WHEN APP IS FIRST OPENED
refreshRegs();
refreshDram();
refreshCache();


// BUTTON LISTENERS //////////////////////////
var regsRefrshBtn = $(button#regsRefrshBtn);
regsRefrshBtn.on("click", refreshRegs);

var dramRefrshBtn = $(button#dramRefrshBtn);
dramRefrshBtn.on("click", refreshDram);

var cacheRefrshBtn = $(button#cacheRefrshBtn);
cacheRefrshBtn.on("click", refreshCache);

/*
var uploadFileBtn = $(button#uploadFileBtn);
var retVal = uploadFileBtn.on("click", view.uploadFileEvent("bob vageen"));
*/

$(button#uploadFileBtn).onClick = function(){
  var el = this; // $(mybutton) passed as this to its handlers
  var allInstructions = view.uploadFileEvent(self#filePathField.text); // pass some attributes and value
  if (allInstructions === ""){
	  self#instrctnsCell.text = "Something went wrong... double check your file name";
  } else {
	  
	  var instrctnsArr = allInstructions.split('-');
	  self#instrctnsCell.text = "";
	  for (var i = 0; i < instrctnsArr.length; i++){
		self#instrctnsCell.$append(<br>{instrctnsArr[i]});
	  }
  }
  	
}